// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.SexyScroll = (function() {

    function SexyScroll(container) {
      this.container = container;
      this.scrollTo = __bind(this.scrollTo, this);

      this.scrollPercent = __bind(this.scrollPercent, this);

      this.handleMouseMove = __bind(this.handleMouseMove, this);

      this.trackClick = __bind(this.trackClick, this);

      this.trackHandle = __bind(this.trackHandle, this);

      this.trackScroll = __bind(this.trackScroll, this);

      container.SexyScroll = this;
      this.scrollContent = this.wrapScrollContent();
      this.scrollBar = this.addScrollBar();
      this.scrollContent.scrollTo = this.scrollTo;
      this.maxScroll = Math.max(0, this.scrollContent.getHeight() - this.container.getHeight());
      this.maxHandleTop = this.scrollBar.getHeight() - this.handle.getHeight();
      container.addEvent('mousewheel:relay(".scroll-content")', this.trackScroll);
      container.addEvent('mousedown:relay(".handle")', this.trackHandle);
      container.addEvent('click:relay(".scroll")', this.trackClick);
    }

    SexyScroll.prototype.wrapScrollContent = function() {
      this.container.setStyles({
        position: "relative",
        overflow: "hidden"
      });
      this.container.innerHTML = '<div class="scroll-content">' + this.container.innerHTML + '<\/div>';
      return this.container.getChildren('.scroll-content')[0].setStyles({
        height: "auto",
        overflow: "hidden"
      });
    };

    SexyScroll.prototype.addScrollBar = function() {
      var scrollBar;
      scrollBar = new Element('div', {
        "class": 'scroll',
        styles: {
          position: "absolute",
          height: "100%",
          top: "0px",
          right: "0px",
          cursor: "pointer"
        }
      }).grab(this.createHandle()).inject(this.container);
      this.scrollContent.setStyles({
        "margin-right": scrollBar.getWidth() + scrollBar.getStyle('margin-left').toInt() + scrollBar.getStyle('margin-right').toInt()
      });
      return scrollBar;
    };

    SexyScroll.prototype.createHandle = function() {
      return this.handle = new Element('div', {
        "class": 'handle',
        styles: {
          position: "absolute",
          top: "0px",
          left: "0px",
          width: "100%"
        }
      });
    };

    SexyScroll.prototype.trackScroll = function(event) {
      var currentMargin, deltaY, newScroll;
      deltaY = event.wheel * 20;
      currentMargin = -1 * this.scrollContent.getStyle('margin-top').toInt();
      newScroll = (currentMargin - deltaY).limit(0, this.maxScroll);
      if (newScroll < this.maxScroll && newScroll > 0) {
        event.stop();
        return this.scrollPercent(newScroll / this.maxScroll);
      }
    };

    SexyScroll.prototype.trackHandle = function(event) {
      var _this = this;
      event.stop();
      this.clientY = event.client.y;
      window.addEvent('mousemove', this.handleMouseMove);
      return window.addEvent('mouseup', function() {
        return window.removeEvent('mousemove', _this.handleMouseMove);
      });
    };

    SexyScroll.prototype.trackClick = function(event) {
      var barY, clickedY, newTop;
      if (event.target.hasClass('scroll')) {
        clickedY = event.client.y;
        barY = this.scrollBar.getPosition().y - window.scrollY;
        newTop = clickedY - barY;
        return this.scrollPercent(newTop / this.maxHandleTop);
      }
    };

    SexyScroll.prototype.handleMouseMove = function(event) {
      var deltaY, handleTop, newTop;
      deltaY = this.clientY - event.client.y;
      this.clientY = event.client.y;
      handleTop = this.handle.getStyle('top').toInt();
      newTop = handleTop - deltaY;
      return this.scrollPercent(newTop / this.maxHandleTop);
    };

    SexyScroll.prototype.scrollPercent = function(percent) {
      var decimal;
      decimal = percent.limit(0, 1);
      this.handle.setStyle('top', this.maxHandleTop * decimal);
      return this.scrollContent.setStyle('margin-top', -1 * (this.maxScroll * decimal));
    };

    SexyScroll.prototype.scrollTo = function(x, y) {
      return this.scrollPercent(y / this.maxScroll);
    };

    return SexyScroll;

  })();

}).call(this);
